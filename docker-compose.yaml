services:
  edvance.database:
    image: postgres:17.4
    container_name: edvance.database
    environment:
      - POSTGRES_DB=edvance
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./.containers/edvance-db:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - edvance-net
  
  edvance.keycloak:
    image: quay.io/keycloak/keycloak:26.2.2
    container_name: edvance.keycloak
    hostname: edvance.keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://edvance.database:5432/keycloak
      - KC_DB_USERNAME=${POSTGRES_USER:-postgres}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - KC_HEALTH_ENABLED=true
    depends_on:
      - edvance.database
    networks:
      - edvance-net
  
  edvance.rabbitmq:
    image: rabbitmq:4.1.0-management
    container_name: edvance.rabbitmq
    hostname: edvance.rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}
    networks:
      - edvance-net
 
  edvance.redis:
    image: redis:8.0.3
    container_name: edvance.redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - edvance-net

  edvance.clamav:
    image: clamav/clamav:1.4.3
    container_name: edvance.clamav
    environment:
      - CLAMAV_NO_FRESHCLAMD=true
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      - edvance-net
  
  edvance.minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    container_name: edvance.minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
      - MINIO_DEFAULT_BUCKETS=edvance-files
    volumes:
      - minio_data:/data
    networks:
      - edvance-net

  edvance.content-service:
    image: contentservice.web.api
    container_name: edvance.content-service
    build:
      context: .
      dockerfile: src/Services/ContentService/ContentService.Web.Api/Dockerfile
    depends_on:
      - edvance.database
      - edvance.rabbitmq
      - edvance.redis
      - edvance.minio
      - edvance.clamav
      - edvance.keycloak
    environment:
      - MessageBroker__Hostname=edvance.rabbitmq
      - MessageBroker__Port=5672
      - MessageBroker__Username=${RABBITMQ_DEFAULT_USER:-guest}
      - MessageBroker__Password=${RABBITMQ_DEFAULT_PASS:-guest}
    networks:
      - edvance-net

  edvance.api-gateway:
    image: apigateway.web.api
    container_name: edvance.api-gateway
    build:
      context: .
      dockerfile: src/ApiGateway/ApiGateway.Web.Api/Dockerfile
    secrets:
      - edvance.cert
    networks:
      - edvance-net

networks:
  edvance-net:
    driver: bridge

volumes:
  redis_data:
  clamav_data:
  minio_data:
